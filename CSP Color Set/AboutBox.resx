<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAyYAAAMmAcvg128AAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAJeUlEQVR4Xu3ZsYqdB37G4ZFBXhuTxixyHKOQiBRrrW0IIpg0ewFbLiwsuYCkssHgPkUal7mCVKtm
        u3W5pSEhhRCYmNxAbiH9yTlJBp0xE7M55/dCiJ4Xfgzfp6n+nHlGQjfHHSS9tt37UtLr0b0vJb0evXp4
        /vz54cWLF7qwjz766PaW357fVUUPjjd94/CjR58cnvz1C13YB794/v3bvnp4+fLlwS7fp59+envLfzq/
        q4oeHG/6xuHtD/7y8PRvD7qwJ3/z8vu3ffUAgOsGgGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwH
        gGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwH
        gGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwH
        gGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwH
        gGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwH
        gGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwH
        gGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwH
        gGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwH
        gGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwH
        gGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwHgGUAKALAcABYBoAiAAwH
        gGUAKALAcABYBoCiHwTgww8/PDx79kwX9s4779zeEgB5/wXAGw//4PDW+3+hC3vzxz/9/m3vPKjpt/e8
        01U9ON70jeNXXd+d2955+PbY6beXLu/rYz8/9s3ZO13X6ZbHmz443vb0NwFd0eln/Pxn/s6Dmk4f2Pve
        6/LcdNPZw68+P9x89pUu7b3Ht7c8SntzeP9nN4ePv9A1nW54ftPHDx8evnr0SBf2+bvv3t7ztrOH5y8P
        Ny8OurSP7v4vwCdf3hx++Z2u6XTD85t++vbbh8PTp7qwl0+e3N7ztrMHAFwXAPIA0AaAZQDIA0AbAJYB
        IA8AbQBYBoA8ALQBYBkA8gDQBoBlAMgDQBsAlgEgDwBtAFgGgDwAtAFgGQDyANAGgGUAyANAGwCWASAP
        AG0AWAaAPAC0AWAZAPIA0AaAZQDIA0AbAJYBIA8AbQBYBoA8ALQBYBkA8gDQBoBlAMgDQBsAlgEgDwBt
        AFgGgDwAtAFgGQDyANAGgGUAyANAGwCWASAPAG0AWAaAPAC0AWAZAPIA0AaAZQDIA0AbAJYBIA8AbQBY
        BoA8ALQBYBkA8gDQBoBlAMgDQBsAlgEgDwBtAFgGgDwAtAFgGQDyANAGgGUAyANAGwCWASAPAG0AWAaA
        PAC0AWAZAPIA0AaAZQDIA0AbAJYBIA8AbQBYBoA8ALQBYBkA8gDQBoBlAMgDQBsAlgEgDwBtAFgGgDwA
        tAFgGQDyANAGgGUAyANAGwCWASAPAG0AWAaAPAC0AWAZAPIA0AaAZQDIA0AbAJYBIA8AbQBYBoA8ALQB
        YBkA8gDQBoBlAMgDQBsAlgEgDwBtAFgGgDwAtAFgGQDyANAGgGUAyANAGwCWASAPAG0AWAaAPAC0AWAZ
        APIA0AaAZQDIA0AbAJYBIA8AbQBYBoA8ALQBYBkA8gDQBoBlAMgDQBsAlgEgDwBtAFgGgDwAtAFgGQDy
        ANAGgGUAyANAGwCWASAPAG0AWAaAPAC0AWAZAPIA0AaAZQDIA0AbAJYBIA8AbQBYBoA8ALQBYBkA8gDQ
        BoBlAMgDQBsAlgEgDwBtPwzArz4/3Hz2lS7tvce3t/zPD+v7P7s5fPyFrul0w/ObPn748PDVo0e6sM/f
        fff2nrfdeVDTN/e803W56aY7D98eO0mry/vdsS+PnT6w9/25/vedbvnzY1+fvdNlnX7Gz3/m7zxI/1f7
        7T3vdH2vHn7yp28enj19S1f0ozcfnB/334690FWdbni65em31+nrvx+77/v0+/Wvx84/o68e/vHXf3I4
        fPdUV/Rnf/zm+XFP/xSw63a64emWtwD88zG7fH9+7Pwz+uoBANcHgHwAaAeAZQDIB4B2AFgGgHwAaAeA
        ZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeA
        ZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeA
        ZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeA
        ZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeA
        ZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeA
        ZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeA
        ZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeA
        ZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeA
        ZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeAZQDIB4B2AFgGgHwAaAeA
        ZQDIB4B2AFgGgHwAaAeAZQDIB4B2/zMA//B3f3R48ZsnuqLHf/jw/Lh/f+yZrup0w9Mtv/3vr/9y7L7v
        0+/XXx07/4zeeZD0enXvS0mvR/e+lPT/vpvDfwDoT17rojj4CgAAAABJRU5ErkJggg==
</value>
  </data>
</root>